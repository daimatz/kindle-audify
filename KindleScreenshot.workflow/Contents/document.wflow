<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>509</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	set magick to (POSIX path of (choose folder with prompt "ImageMagick の \"magick\" コマンドが含まれるフォルダを選択してください")) &amp; "/magick"	try		do shell script magick &amp; " -version"	on error		display alert "magick コマンドが見つかりません"		return	end try		set dir to "~/KindleScreenshot"	set http_port to 37158		display dialog "本のタイトルは？" default answer ""	set title to text returned of result	do shell script "date +%Y%m%d%H%M%S"	set tmp_timestamp to the result	set tmp_dir to (dir &amp; "/tmp/" &amp; tmp_timestamp)		do shell script "rm -rf " &amp; tmp_dir	do shell script "mkdir -p " &amp; tmp_dir		tell application "System Events" to activate	tell application "Kindle" to activate	delay 0.5	do shell script "screencapture -m " &amp; tmp_dir &amp; "/$(date +%s).png"		set same to 0	repeat 1000 times		if same ≥ 5 then exit repeat				tell application "Kindle" to activate		tell application "System Events" to key code 123		delay 1		do shell script "screencapture -m " &amp; tmp_dir &amp; "/$(date +%s).png"		do shell script magick &amp; " compare -metric AE $(ls -t " &amp; tmp_dir &amp; "/*.png | head -n 2) NULL: 2&gt;&amp;1 || :"		set diff to the result as number				if diff &lt; 10000 then			do shell script "rm $(ls -t " &amp; tmp_dir &amp; "/*.png | head -n 1)"			set same to (same + 1)		else			set same to 0		end if	end repeat	do shell script "say 'End Screenshorts'"	display notification "End Screenshots"	delay 5		do shell script magick &amp; " convert " &amp; tmp_dir &amp; "/*.png " &amp; tmp_dir &amp; "/raw.pdf"	do shell script ("cd " &amp; dir &amp; "; python3 -mhttp.server " &amp; http_port &amp; " &amp;&gt; /dev/null &amp; echo $!")	set old_clipboard to (the clipboard)	do shell script "open \"http://localhost:" &amp; http_port &amp; "/marker.html?tmp/" &amp; tmp_timestamp &amp; "/raw.pdf\""	delay 5	repeat		set new_clipboard to (the clipboard)		if not old_clipboard = new_clipboard then exit repeat		delay 0.5	end repeat	do shell script "kill -KILL $(ps aux | grep 'mhttp.server " &amp; http_port &amp; "' | grep -v grep | awk '{print $2}')"		do shell script magick &amp; " convert -crop " &amp; new_clipboard &amp; " " &amp; tmp_dir &amp; "/*.png " &amp; dir &amp; "/'" &amp; title &amp; ".pdf'"	do shell script "open " &amp; dirend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>1B086641-4DDE-4E17-8E4F-581583396B05</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>41F213DE-84CD-4F1F-AB1B-A5037DDF09B9</string>
				<key>UUID</key>
				<string>7FEDD342-3291-490B-9DD7-CC6E3531C2DF</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>763.500000:1117.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>F0C27FC4-D194-48CB-9090-4DBA9757DD08</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Path</string>
			<key>name</key>
			<string>Path</string>
			<key>value</key>
			<string>~/Desktop/KindleScreenshot</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.workflow</string>
	</dict>
</dict>
</plist>
